//UINT8 xdata LCD_RAM[19] _at_  0x1E0;
//unsigned char xdata LCDBuf[19]  _at_ 0x1e0;   //LCD RAM 地址 480-224  

unsigned char Key=0;
unsigned char Key_Press_Delay=0;
unsigned char Key_Delay_t=0;
//unsigned char Num,Fnum;
//unsigned char Disp;
//unsigned char Time0Count;
unsigned char Mode_Status=0;
unsigned char Hold_Status=0;
unsigned char LCD_BUFFER[3];
unsigned char BatH=0;
unsigned char BatL=0;
bit Batupdata_Flag=0;			//刷新电池电量.
bit MeasureABCD_Flag=0;			//刷新测量. 
bit Pwr_Flag = 0;
bit DispFlag; 
unsigned short Adc_Val;
unsigned short g_counter=0;		//５ms
unsigned short g_time5ms=0;			//５ms
unsigned short g_time1s=0;		//1s
unsigned short g_timeBatt=4;		//第一次低电检测
unsigned short g_timeAPO=10;		//APO设定１０分钟	
unsigned short L_TEMP,L_TEMP1,D0,D0_old=0;	

main()
{

	mcu_init();
	init_timer2();
	init_lcd();
	init_adc();
	
	LCD_ALLON();
	DELAY(10000);
	LCD_ALLOFF();
	Display_Lcd_Number(0,3);
	Display_AFlag_onoff(1);			//默认Ａ模式.
		
	Display_PerFlag_onoff(1);
	Display_TijiFlag_onoff(1);
					
    	while(1)
	{
		Key_press();
		Measure_Process();
		
		//按键关机或ＡＰＯ时间到
		if((Pwr_Flag==1)|(g_timeAPO==0))
		{
			DELAY(1000);
			P0 &= ~0x04;		//P0.2=1，关电
			TCON |=0x01;		//下降沿
//			IEN0 |=0x01;     	//打开外部中断０,
						//直接关电,不开中断，下次直接开机.
			
			 SUSLO=0x55;
			 PCON=0x02;
			 _nop_();
			 _nop_();
			 _nop_();
			 
			 g_timeAPO = 10;
			 Pwr_Flag=0;
			IEN0 &= 0xFE;     	//关外部中断０
		}		
	}

}



/*-------------------------------------------------------
FunctionName  : INT_INT0
Description   : 
Input         : 无
OutPut        : 无
Author        : jet
Date          : 2014.11.21
Other         : 注意事项、修改记录、函数版本等
--------------------------------------------------------*/
void INT_INT0(void) interrupt 0
{ 
	_push_(INSCON);
	
	PCON=0x00;
	P0 |= 0x04;		//P0.2=1 	

	_pop_(INSCON);       
}


/*-------------------------------------------------------
FunctionName  : INT_TIMER2
Description   : 
Input         : 无
OutPut        : 无
Author        : jet
Date          : 2014.11.21
Other         : 注意事项、修改记录、函数版本等
--------------------------------------------------------*/

void INT_TIMER2(void) interrupt 5
{
unsigned char usult;
	 
	_push_(INSCON);

   	if(T2CON&0x80)
	{
		T2CON &=0x7F;                  //定时器溢出中断,清溢出标志
	}

	usult = P0 & 0x70;
	
	if(usult!=0x70)
	{
		Key_Press_Delay++;
		if((Key_Press_Delay>2)&&(Key_Delay_t>5))
		{
			Key_Delay_t=2;

			if(usult==0x60)
			{
				Key = 1;		//POWER
			}
			if(usult==0x50)
			{
				Key = 2;		//MODE
			}
			if(usult==0x30)
			{
				Key = 3;		//HOLD
			}
		}	
	}
	else
	{
		Key_Delay_t++;
		Key_Press_Delay = 0;			//表示松开了。
	}				
	
	g_counter++;
	
	g_time5ms++;
	if(g_time5ms>=100)				//半秒。
	{
		g_time5ms = 0;
		MeasureABCD_Flag=1;			//刷新测量. 
		g_time1s++;
		
		if(g_timeBatt>0)
		{
			g_timeBatt--;
		}
		else
		{
			g_timeBatt = 10;
			Batupdata_Flag=1;			//刷新电池电量.
		}
					
		if(g_time1s>=120)			//１分钟			
		{
			g_time1s = 0;
			if(g_timeAPO>0)
			{
				g_timeAPO--;
			}			
		}		
	}
		
	_pop_(INSCON);       
}



/*-------------------------------------------------------
FunctionName  : INT_ADC
Description   : 
Input         : 无
OutPut        : 无
Author        : jet
Date          : 
Other         : 注意事项、修改记录、函数版本等
--------------------------------------------------------*/
void INT_ADC(void) interrupt 6
{ 
	_push_(INSCON);
	Adc_Val=ADDL+(ADDH<<8);
//	Adc_Val=ADCL+(ADCH*0x100);
	_nop_();
	ADCON &=0xbf; 
	_pop_(INSCON);       
}


void DELAY(unsigned long i)
{
	while(i--)
	;	
}


void Key_press()
{
	//PWR
	if(Key == 1)
	{
		Pwr_Flag = 1;
		g_timeAPO=10;
	}
	//MODE
	if(Key == 2)
	{
		Mode_Status++;
		
		g_timeAPO=10;
		
		Display_AFlag_onoff(0);
		Display_BFlag_onoff(0);
		Display_CFlag_onoff(0);
		Display_DFlag_onoff(0);

		if(Mode_Status==1)
		{
			Display_BFlag_onoff(1);
		}
		else if(Mode_Status==2)
		{
			Display_CFlag_onoff(1);
		}
		else if(Mode_Status==3)
		{
			Display_DFlag_onoff(1);
		}
		else  if(Mode_Status==4)
		{
			Mode_Status = 0;
		}		
		else 
		{
			Mode_Status = 0;
			Display_AFlag_onoff(1);
		}		
	}
	if(Key == 3)
	{
		g_timeAPO=10;
		
		if(Hold_Status==0)
		{
			Hold_Status = 1;
			Display_HOLDFlag_onoff(1);
		}
		else
		{
			Hold_Status = 0;
			Display_HOLDFlag_onoff(0);
		}
			
	}
	Key = 0;
}

//*************************************  
// 函数名称：AdcSwitch  
// 函数功能: 在单通道模式下转换某一通道的AD值  
//                   在(扫描模式下)连续转化1-Chanel的AD值  
// 入口参数：要转换的AD通道号  
// 出口参数：无  
/***************************************/  
void AdcSwitch(unsigned char Chanel)  
{     
    unsigned char i = 0 ;  

    for(i=20;i>0;i--) ;  

//  ADCON = 0X80 ;   //打开ADC模块  
    ADCON = (ADCON & ~(7<<1)) | Chanel ; //选择通道  
    ADCON |= 0x01 ; //开始转换AD  
    while(ADCON & 0x01); //等待转换结束  

    return ;  
}  

short code mucai_taba[][2] =
{
	{0,0},
	{60,30},		//40G	,猜想
	{80,40},		//30G	,猜想
	{115,45},		//20G
	{135,53},		//15G
	{154,56},		//10G
	{186,63},		//6G
	{222,69},		//2.4G,
	{246,85},		//1.2G
	{288,88},		//600M
	{324,94},		//300M
	{357,99},		//100M
	{399,106},		//45M
	{431,113},		//22M
	{435,115},		//20M
	{466,126},		//10M
	{477,130},		//8M
	{499,136},		//5M
	{523,144},		//3M
	{543,153},		//2M
	{554,156},		//1.6M
	{578,163},		//1M
	{583,167},		//900K
	{598,173},		//680K
	{616,183},		//490K
	{639,229},		//330K
	{665,304},		//220K
	{692,385},		//150K
	{723,485},		//100K
	{732,505},		//90K
	{741,549},		//80K
	{752,584},		//70K
	{765,638},		//60K
	{782,721},		//50K
	{802,849},		//40K
	{827,923},		//30K
	{861,936},		//20K
	{911,955},		//10K
	{1000,995},
	{1010,998},
	{1030,999}
	
};

short code mucai_tabb[][2] =
{
	{0,0},
	{60,35},		//40G	,猜想
	{80,45},		//30G	,猜想
	{115,56},		//20G
	{135,64},		//15G
	{154,69},
	{186,76},
	{222,83},
	{246,99},
	{288,102},		//600M
	{324,108},		//300M
	{357,113},		//100M
	{399,121},		//45M
	{431,128},		//22M
	{435,130},		//20M
	{466,144},		//10M
	{477,149},		//8M
	{499,156},		//5M
	{523,164},		//3M
	{543,173},		//2M
	{554,177},		//1.6M
	{578,184},		//1M
	{583,189},		//900K
	{598,196},		//680K
	{616,217},		//490K
	{639,257},		//330K
	{665,328},		//220K
	{692,385},		//150K
	{723,485},		//100K
	{732,505},		//90K
	{741,549},		//80K
	{752,584},		//70K
	{765,638},		//60K
	{782,721},		//50K
	{802,849},		//40K
	{827,923},		//30K
	{861,936},		//20K
	{911,955},		//10K
	{1000,995},
	{1010,998},
	{1030,999}
	
};

short code mucai_tabc[][2] =
{
	{0,0},
	{60,45},		//40G	,猜想
	{80,50},		//30G	,猜想
	{115,62},		//20G
	{135,72},		//15G
	{154,77},
	{186,84},
	{222,92},
	{246,112},
	{288,115},		//600M
	{324,123},		//300M
	{357,130},		//100M
	{399,141},		//45M
	{431,150},		//22M
	{435,155},		//20M
	{466,174},		//10M
	{477,178},		//8M
	{499,191},		//5M
	{523,204},		//3M
	{543,217},		//2M
	{554,226},		//1.6M
	{578,236},		//1M
	{583,241},		//900K
	{598,248},		//680K
	{616,273},		//490K
	{639,309},		//330K
	{665,349},		//220K
	{692,385},		//150K
	{723,485},		//100K
	{732,505},		//90K
	{741,549},		//80K
	{752,584},		//70K
	{765,638},		//60K
	{782,721},		//50K
	{802,849},		//40K
	{827,923},		//30K
	{861,936},		//20K
	{911,955},		//10K
	{1000,995},
	{1010,998},
	{1030,999}
	
};

short code mucai_tabd[][2] =
{
	{0,0},
	{60,50},		//40G	,猜想
	{80,58},		//30G	,猜想
	{115,68},		//20G
	{135,79},		//15G
	{154,84},
	{186,93},
	{222,101},
	{246,117},
	{288,118},		//600M
	{324,128},		//300M
	{357,134},		//100M
	{399,143},		//45M
	{431,151},		//22M
	{435,153},		//20M
	{466,166},		//10M
	{477,172},		//8M
	{499,180},		//5M
	{523,191},		//3M
	{543,205},		//2M
	{554,211},		//1.6M
	{578,222},		//1M
	{583,227},		//900K
	{598,233},		//680K
	{616,255},		//490K
	{639,286},		//330K
	{665,333},		//220K
	{692,385},		//150K
	{723,485},		//100K
	{732,505},		//90K
	{741,549},		//80K
	{752,584},		//70K
	{765,638},		//60K
	{782,721},		//50K
	{802,849},		//40K
	{827,923},		//30K
	{861,936},		//20K
	{911,955},		//10K
	{1000,995},
	{1010,998},
	{1030,999}
	
};

short code mucai_tabe[][2] =
{
	{0,0},
	{10,10},
	{20,20},
	{30,30},
	{40,40},
	{50,50},
	{60,60},
	{70,70},
	{80,80},
	{90,90},
	{100,100},
	{110,110},
	{120,120},
	{130,130},
	{140,140},
	{150,150},
	{160,160},
	{170,170},
	{180,180},
	{190,190},
	{200,200},
	{210,210},
	{220,220},
	{230,230},
	{240,240},
	{250,250},
	{260,260},
	{270,270},
	{280,280},
	{290,290},
	{300,300},
	{400,400},
	{500,500},
	{600,600},
	{700,700},
	{800,800},
	{900,900},
	{1000,1000},
	{1010,1010},
	{1030,1030}
	
};


void Measure_Process()
{
char i,j;		
unsigned long temp_value,temp_value1;

	//是否低电
	if(Batupdata_Flag)
	{
		Batupdata_Flag = 0;
		//转换通道1  
		AdcSwitch(2); 		//;1-3位.0,2,4,6,8,10,12,  
		BatH = ADDH ; 		//取数据 ,满电约0xD6.
		BatL = ADDL ;
//		if(BatH>=0xa0)
//		if(BatH<=0xA8)		//7.9V,两个二极管
		if(BatH<=0xAD)		//7.5V
		{
			Display_BatFlag_onoff(1);
		}
		else
		{
			Display_BatFlag_onoff(0);
		}		
	}
	
	
	if((MeasureABCD_Flag)&&(Hold_Status==0))
	{
		MeasureABCD_Flag = 0;
		
		//转换通道0  
		AdcSwitch(0); 		//;1-3位.0,2,4,6,8,10,12,  
		BatH = ADDH ; 		//取数据  
		BatL = ADDL ;
		//显示电池ＡＤ,有次测出为0xD6
//		L_TEMP = BatH<<2+BatL;
		L_TEMP = BatH*4+BatL;
		
		D0 = L_TEMP;
		
		//平均算法。
		Function_average_number();
		
		//稳定
#if 1
		if(((D0-D0_old)<20)&&((D0-D0_old)>-20))
		{
			D0 = (D0_old + D0_old + D0_old + D0 + D0) / 5;
		}		
#endif		
		
		L_TEMP = D0;
		
		//A类型
		if(Mode_Status == 0)
		{
			i=0;
			j=1;
			while(j)
			{
				if(L_TEMP<=mucai_taba[i][0])
				{
					j=0;
					break;
				}
				i++;
				if(i>=40)
				{
					j=0;
					break;
				}				
			}
			
			if((i>0)&(i<50))
			{
				temp_value = mucai_taba[i-1][1];
				temp_value1 = (L_TEMP-mucai_taba[i-1][0]);
				temp_value1 = temp_value1*(mucai_taba[i][1]-mucai_taba[i-1][1]);
				temp_value1 = temp_value1 / (mucai_taba[i][0]-mucai_taba[i-1][0]);
				temp_value = temp_value + temp_value1; 
			}
			else
			{
				temp_value = 0;
			}			
			
			L_TEMP1 = (long)(temp_value);

			if(L_TEMP1>=1000)
			{
				L_TEMP1 = 1000;
			}
								
			LCD_BUFFER[2] = L_TEMP1 /100;
			L_TEMP1 = L_TEMP1 % 100;
			LCD_BUFFER[1] = L_TEMP1/10;
			L_TEMP1 = L_TEMP1 % 10;
			LCD_BUFFER[0] = L_TEMP1; 
				
		}
		else if(Mode_Status == 1)
		{
			i=0;
			j=1;
			while(j)
			{
				if(L_TEMP<=mucai_tabb[i][0])
				{
					j=0;
					break;
				}
				i++;
				if(i>=40)
				{
					j=0;
					break;
				}				
			}
			
			if((i>0)&(i<50))
			{
				temp_value = mucai_tabb[i-1][1];
				temp_value1 = (L_TEMP-mucai_tabb[i-1][0]);
				temp_value1 = temp_value1*(mucai_tabb[i][1]-mucai_tabb[i-1][1]);
				temp_value1 = temp_value1 / (mucai_tabb[i][0]-mucai_tabb[i-1][0]);
				temp_value = temp_value + temp_value1; 
			}
			else
			{
				temp_value = 0;
			}			
			
			L_TEMP1 = (long)(temp_value);

			if(L_TEMP1>=1000)
			{
				L_TEMP1 = 1000;
			}
								
			LCD_BUFFER[2] = L_TEMP1 /100;
			L_TEMP1 = L_TEMP1 % 100;
			LCD_BUFFER[1] = L_TEMP1/10;
			L_TEMP1 = L_TEMP1 % 10;
			LCD_BUFFER[0] = L_TEMP1; 
				
		}
		else if(Mode_Status == 2)
		{
			i=0;
			j=1;
			while(j)
			{
				if(L_TEMP<=mucai_tabc[i][0])
				{
					j=0;
					break;
				}
				i++;
				if(i>=40)
				{
					j=0;
					break;
				}				
			}
			
			if((i>0)&(i<50))
			{
				temp_value = mucai_tabc[i-1][1];
				temp_value1 = (L_TEMP-mucai_tabc[i-1][0]);
				temp_value1 = temp_value1*(mucai_tabc[i][1]-mucai_tabc[i-1][1]);
				temp_value1 = temp_value1 / (mucai_tabc[i][0]-mucai_tabc[i-1][0]);
				temp_value = temp_value + temp_value1; 
			}
			else
			{
				temp_value = 0;
			}			
			
			L_TEMP1 = (long)(temp_value);

			if(L_TEMP1>=1000)
			{
				L_TEMP1 = 1000;
			}
								
			LCD_BUFFER[2] = L_TEMP1 /100;
			L_TEMP1 = L_TEMP1 % 100;
			LCD_BUFFER[1] = L_TEMP1/10;
			L_TEMP1 = L_TEMP1 % 10;
			LCD_BUFFER[0] = L_TEMP1; 
				
		}
		else if(Mode_Status == 3)
		{
			i=0;
			j=1;
			while(j)
			{
				if(L_TEMP<=mucai_tabd[i][0])
				{
					j=0;
					break;
				}
				i++;
				if(i>=40)
				{
					j=0;
					break;
				}				
			}
			
			if((i>0)&(i<50))
			{
				temp_value = mucai_tabd[i-1][1];
				temp_value1 = (L_TEMP-mucai_tabd[i-1][0]);
				temp_value1 = temp_value1*(mucai_tabd[i][1]-mucai_tabd[i-1][1]);
				temp_value1 = temp_value1 / (mucai_tabd[i][0]-mucai_tabd[i-1][0]);
				temp_value = temp_value + temp_value1; 
			}
			else
			{
				temp_value = 0;
			}			
			
			L_TEMP1 = (long)(temp_value);

			if(L_TEMP1>=1000)
			{
				L_TEMP1 = 1000;
			}
								
			LCD_BUFFER[2] = L_TEMP1 /100;
			L_TEMP1 = L_TEMP1 % 100;
			LCD_BUFFER[1] = L_TEMP1/10;
			L_TEMP1 = L_TEMP1 % 10;
			LCD_BUFFER[0] = L_TEMP1; 
				
		}
		else
		{
			LCD_BUFFER[2] = L_TEMP /100;
			L_TEMP = L_TEMP % 100;
			LCD_BUFFER[1] = L_TEMP/10;
			L_TEMP = L_TEMP % 10;
			LCD_BUFFER[0] = L_TEMP; 
		}	
		Display_Lcd_Number(2,LCD_BUFFER[2]);
		Display_Lcd_Number(1,LCD_BUFFER[1]);
		Display_Lcd_Number(0,LCD_BUFFER[0]);
		Display_Lcd_Dot(1);
	}
	
}
